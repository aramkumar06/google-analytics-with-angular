{
    "openapi": "3.0.0",
    "info": {
        "title": "Fantasy Sports API",
        "description": "Fantasy Sports OpenApi",
        "contact": {
            "email": "reachua@sciflare.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/",
            "description": "Local Fantasy Sports OpenApi Endpoint"
        },
        {
            "url": "https://www.sciflaredev.com/api/",
            "description": "Fantasy Sports OpenApi Endpoint"
        }
    ],
    "paths": {
        "/auth/tokenSocial": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Request Access Token via Social Login",
                "description": "Request Access Token with Social Token ; social_provider : 'google' or 'facebook'",
                "operationId": "Request Access Token via Social Login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {},
                            "example": {
                                "social_token": "ya29.Gl2DBw2UJnKZD3dDabMr_zdKQGMdJLmRU6qZ2ttV6rn7bVsBk_RSQfU88eDQr0wUnUCLHnL2aCmcmgjX5jkD8S4RrwxI-JyRF6JaGMgwptHrGcNBmm-uafZ7uXM8m8E",
                                "social_provider": "google"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User Signup",
                "description": "User Signup & returns registration status",
                "operationId": "User Signup",
                "requestBody": {
                    "description": "User object that needs to be created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "example": "{\n\"email\":\"reachus@sciflare.com\",\n\"password\":\"1234567\",\n\"password_confirmation\":\"1234567\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/auth/signup/verify/{token}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Verify User Email via token",
                "operationId": "Verify User Email",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "Token for Email Verification",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User Login",
                "description": "User Login & returns Access Token",
                "operationId": "User Login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "example": {
                                "email": "reachus@sciflare.com",
                                "password": "test@1234",
                                "remember_me": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User Logout",
                "description": "Logs out current logged in user session",
                "operationId": "User logout",
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get current authenticated user",
                "operationId": "Get Current User",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                },
                                "example": {
                                    "id": 3,
                                    "email": "reachus@sciflare.com",
                                    "email_verified_at": null,
                                    "created_at": "2019-01-30 14:46:25",
                                    "updated_at": "2019-01-30 14:46:25"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid Authentication"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/changePassword/{userID}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update Password of an existing User",
                "description": "Update Password of an existing User",
                "operationId": "changePassword",
                "parameters": [
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "ID of user to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User object that needs to be updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "example": "{\n\"email\":\"reachus@sciflare.com\",\n\"current_password\":\"7654321\",\n\"password\":\"1234567\",\n\"password_confirmation\":\"1234567\"\n}"
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/sendOTP": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "sendOTP to provided mobile number",
                "description": "sends OTP & returns response",
                "operationId": "User - sendOTP",
                "requestBody": {
                    "description": "Mobile number to send OTP",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "example": "{\n\"mobile\":\"9999999999\",\n\"type\":\"signup or login\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/auth/AuthVerifyOTP": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "verifyOTP to provided mobile number & OTP and Signup/Login",
                "description": "verifies OTP & Signsup/Login & returns response",
                "operationId": "User - verifyOTP",
                "requestBody": {
                    "description": "Mobile number to send OTP",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "example": "{\n\"mobile\":\"9999999999\",\n\"otp\":\"1234\",\n\"type\":\"signup or login\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/auth/getAppLink": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Get Download link to Mobile App to provided mobile number",
                "description": "sends app link & returns response",
                "operationId": "Get App Link",
                "requestBody": {
                    "description": "Mobile number to send App Link",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "example": "{\n\"mobile\":\"9999999999\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/contests": {
            "get": {
                "tags": [
                    "Contests"
                ],
                "summary": "Get Contest information",
                "description": "Returns List of all Contests",
                "operationId": "getContests",
                "parameters": [
                    {
                        "name": "filter[fixture_id]",
                        "in": "query",
                        "description": "Filter Contests by Fixture ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[series_id]",
                        "in": "query",
                        "description": "Filter Contests by Series ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[size]",
                        "in": "query",
                        "description": "Filter Contests by Size of contest",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[joined]",
                        "in": "query",
                        "description": "Filter Contests by Joined users for the contest",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[total_prize]",
                        "in": "query",
                        "description": "Filter Contests by Total Prize of contest",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[FeeRange]",
                        "in": "query",
                        "description": "Filter Contests by Entry Fee of contest",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include model series, fixtures",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contests"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Contests"
                ],
                "summary": "Create new Contest",
                "description": "Creates a new Contest & returns status",
                "operationId": "createContests",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contests"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/privatecontest": {
            "post": {
                "tags": [
                    "Contests"
                ],
                "summary": "Create new Private Contest",
                "description": "Creates a new Private Contest & returns status",
                "operationId": "createPrivateContests",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contests"
                            },
                            "example": "\n{\"fixture_id\": \"3\",\n  \"contest_name\": \"Grand League\",\n  \"size\": \"30\",\n  \"joined\": \"10\",\n  \"total_prize\": \"50\",\n  \"prize_splitup\": \"30,15,5\",\n  \"entry_fee\": \"5\",\n  \"multi\": \"0\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/contests/{contestId}": {
            "get": {
                "tags": [
                    "Contests"
                ],
                "summary": "Find contest by ID",
                "description": "Returns a single contest",
                "operationId": "getContestById",
                "parameters": [
                    {
                        "name": "contestId",
                        "in": "path",
                        "description": "ID of contest to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contests"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contests"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Contest not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/contests/{contestID}": {
            "put": {
                "tags": [
                    "Contests"
                ],
                "summary": "Update an existing Contest",
                "description": "Update an existing Contest",
                "operationId": "updateContests",
                "parameters": [
                    {
                        "name": "contestID",
                        "in": "path",
                        "description": "ID of contest to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Contest object that needs to be updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contests"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Contest not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/fixture": {
            "get": {
                "tags": [
                    "Fixtures"
                ],
                "summary": "Get Fixture information, also with various filters",
                "description": "Returns List of all Fixtures with filters",
                "operationId": "getFixtures",
                "parameters": [
                    {
                        "name": "filter[id]",
                        "in": "query",
                        "description": "Fixture ID to filter the Returns by Fixture",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[start_state]",
                        "in": "query",
                        "description": "Match start State to filter the Returns by Start state",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "upcoming",
                                    "live",
                                    "completed"
                                ]
                            }
                        }
                    },
                    {
                        "name": "filter[type]",
                        "in": "query",
                        "description": "Type of fixture to filter the Returns by type",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Test",
                                    "ODI",
                                    "T20",
                                    "T10"
                                ]
                            }
                        }
                    },
                    {
                        "name": "filter[series_id]",
                        "in": "query",
                        "description": "Series ID to filter the Returns by Series",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "query",
                        "description": "Round ID to filter the Returns by Round",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fixture"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Fixtures"
                ],
                "summary": "Create new Fixture",
                "description": "Creates a new Fixture & returns status",
                "operationId": "createFixtures",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fixture"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/fixturewithTeam": {
            "get": {
                "tags": [
                    "Fixtures"
                ],
                "summary": "Get Fixture information along with Teams, also with various filters",
                "description": "Returns List of all Fixtures with Teams with Filters",
                "operationId": "getFixtureswithTeams",
                "parameters": [
                    {
                        "name": "filter[start_state]",
                        "in": "query",
                        "description": "Match start State to filter the Returns by Start state",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "upcoming",
                                    "live",
                                    "completed"
                                ]
                            }
                        }
                    },
                    {
                        "name": "filter[type]",
                        "in": "query",
                        "description": "Type of fixture to filter the Returns by type",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Test",
                                    "ODI",
                                    "T20"
                                ]
                            }
                        }
                    },
                    {
                        "name": "filter[series_id]",
                        "in": "query",
                        "description": "Series ID to filter the Returns by Series",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FixtureResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/joinedMatches": {
            "get": {
                "tags": [
                    "Fixtures"
                ],
                "summary": "Get User joined Fixture & Series information along with Contests, also with various filters",
                "description": "Returns List of all user joined Fixtures & Series with Contests with Filters",
                "operationId": "joinedMatches",
                "parameters": [
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "description": "Match start status 1 - Live, 2 - Upcoming, 3 - Completed",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "enum": [
                                    "1",
                                    "2",
                                    "3"
                                ]
                            }
                        }
                    },
                    {
                        "name": "filter[type]",
                        "in": "query",
                        "description": "Type of fixture to filter the Returns by type",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Test",
                                    "ODI",
                                    "T20"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/fixtureAndSeries": {
            "get": {
                "tags": [
                    "Fixtures"
                ],
                "summary": "Get Fixture information along with Series & Teams, also with various filters",
                "description": "Returns List of all Fixtures with Teams with Filters",
                "operationId": "fixtureAndSeries",
                "parameters": [
                    {
                        "name": "filter[type]",
                        "in": "query",
                        "description": "Type of fixture/series to filter the Returns by type",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Test",
                                    "ODI",
                                    "T20",
                                    "T10"
                                ]
                            }
                        }
                    },
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "description": "1 - Live, 2 - Upcoming, 3 - Completed, Status of fixture/series to filter the Returns by status",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "enum": [
                                    "1",
                                    "2",
                                    "3"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/fixture/{fixtureId}": {
            "get": {
                "tags": [
                    "Fixtures"
                ],
                "summary": "Find fixture by ID",
                "description": "Returns a single fixture",
                "operationId": "getFixtureById",
                "parameters": [
                    {
                        "name": "fixtureId",
                        "in": "path",
                        "description": "ID of fixture to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fixture"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fixture"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Fixture not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/fixture/{fixtureID}": {
            "put": {
                "tags": [
                    "Fixtures"
                ],
                "summary": "Update an existing Fixture",
                "description": "Update an existing Fixture",
                "operationId": "updateFixtures",
                "parameters": [
                    {
                        "name": "fixtureID",
                        "in": "path",
                        "description": "ID of fixture to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Fixture object that needs to be updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fixture"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Fixture not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/joinedContests": {
            "get": {
                "tags": [
                    "JoinedContests"
                ],
                "summary": "Get Joined Contest info for current user",
                "description": "Returns List of all Joined Contests for current user",
                "operationId": "getjoinedContests",
                "parameters": [
                    {
                        "name": "filter[fixture_id]",
                        "in": "query",
                        "description": "Filter Contests by Fixture ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[series_id]",
                        "in": "query",
                        "description": "Filter Contests by Series ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include model series, fixtures",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JoinedContests"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "JoinedContests"
                ],
                "summary": "Join the Contest with current User",
                "description": "Join the Contest & returns status",
                "operationId": "createJoinedContests",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JoinedContests"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dfsleaderboard/{fixture_id}/{contest_id}": {
            "get": {
                "tags": [
                    "JoinedContests"
                ],
                "summary": "Get Leaderboard of a Contest",
                "description": "Returns List of all users with rank for a Contest",
                "operationId": "dfsleaderboard",
                "parameters": [
                    {
                        "name": "fixture_id",
                        "in": "path",
                        "description": "Select Fixture ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contest_id",
                        "in": "path",
                        "description": "Select Contests ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JoinedContests"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/contestByInvite/{fixture_id}/{invite_code}": {
            "get": {
                "tags": [
                    "JoinedContests"
                ],
                "summary": "get the Contest data with invite code",
                "description": "get the Contest data with invite code & returns status",
                "operationId": "contestByInvite",
                "parameters": [
                    {
                        "name": "fixture_id",
                        "in": "path",
                        "description": "Select Fixture ID, eg: 133, if not mandatory = 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "invite_code",
                        "in": "path",
                        "description": "Select Invite Code, eg: 8325CE76833C00CF",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/joinbyinvite": {
            "post": {
                "tags": [
                    "JoinedContests"
                ],
                "summary": "Join the Contest with invite code",
                "description": "Join the Contest with invite code & returns status",
                "operationId": "joinbyinvite",
                "requestBody": {
                    "description": "join contest by invite code object that needs to be created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JoinedContests"
                            },
                            "example": "{\n\"invite_code\":\"5745C7FCBD4E146F\",\n\"team_id\":\"3\",\n\"fixture_id\":\"15\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/joinedContestsSeries": {
            "get": {
                "tags": [
                    "JoinedContestsSeries"
                ],
                "summary": "Get Joined Contest Series info for current user",
                "description": "Returns List of all Joined Contests Series for current user",
                "operationId": "getjoinedContestsSeries",
                "parameters": [
                    {
                        "name": "filter[series_id]",
                        "in": "query",
                        "description": "Filter Series Contests by Series ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include model series, series_contests",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JoinedContests"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "JoinedContestsSeries"
                ],
                "summary": "Join the Series Contest with current User",
                "description": "Join the Series Contest & returns status",
                "operationId": "createJoinedContestsSeries",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JoinedContestsSeries"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/sfsleaderboard/{series_id}/{contest_id}": {
            "get": {
                "tags": [
                    "JoinedContestsSeries"
                ],
                "summary": "Get Leaderboard of a Series Contest",
                "description": "Returns List of all users with rank for a Series Contest",
                "operationId": "sfsleaderboard",
                "parameters": [
                    {
                        "name": "series_id",
                        "in": "path",
                        "description": "Select Series ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contest_id",
                        "in": "path",
                        "description": "Select Contests ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JoinedContestsSeries"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/sfsleaderboardrnd/{series_id}/{contest_id}/{round_id}": {
            "get": {
                "tags": [
                    "JoinedContestsSeries"
                ],
                "summary": "Get Leaderboard of a Series Contest",
                "description": "Returns List of all users with rank for a Series Contest",
                "operationId": "sfsleaderboardrnd",
                "parameters": [
                    {
                        "name": "series_id",
                        "in": "path",
                        "description": "Select Series ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contest_id",
                        "in": "path",
                        "description": "Select Contests ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "Select Round ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JoinedContestsSeries"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/seriescontestByInvite/{series_id}/{invite_code}": {
            "get": {
                "tags": [
                    "JoinedContestsSeries"
                ],
                "summary": "get the Contest data with invite code",
                "description": "get the Contest data with invite code & returns status",
                "operationId": "seriescontestByInvite",
                "parameters": [
                    {
                        "name": "series_id",
                        "in": "path",
                        "description": "Select Series ID, eg: 5, if not mandatory = 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "invite_code",
                        "in": "path",
                        "description": "Select Invite Code, eg: 8305CEF4A7EF20A5",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/joinseriesbyinvite": {
            "post": {
                "tags": [
                    "JoinedContestsSeries"
                ],
                "summary": "Join the Series Contest with invite code",
                "description": "Join the Series Contest with invite code & returns status",
                "operationId": "joinseriesbyinvite",
                "requestBody": {
                    "description": "join series contest by invite code object that needs to be created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JoinedContestsSeries"
                            },
                            "example": "{\n\"invite_code\":\"5745C7FCBD4E146F\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/password/request": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Password Request Token",
                "description": "Request Token to Reset Password",
                "operationId": "Password Request Token",
                "requestBody": {
                    "description": "User email to reset password",
                    "content": {
                        "application/json": {
                            "schema": {},
                            "example": "{\n\"email\":\"reachus@sciflare.com\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/password/verify/{token}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Verify Password request via token",
                "operationId": "Verify Password request",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "Token for Password Request",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/password/reset": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Password Change",
                "description": "Request to Change Password",
                "operationId": "Password Change",
                "requestBody": {
                    "description": "User New Password to reset password",
                    "content": {
                        "application/json": {
                            "schema": {},
                            "example": "{\n\"email\":\"reachus@sciflare.com\",\n\"password\":\"1234567\",\n\"password_confirmation\":\"1234567\",\n\"token\":\"w8dD1Yj3rzgrGfGp9bMdhtvU4eycHpljyEZK739BCyQ3Zs9uqhjged9TijnC\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/getPerformance/{fixture_id}/{player_id}": {
            "get": {
                "tags": [
                    "Performance"
                ],
                "summary": "Find Fantasy Performance by PlayerID",
                "description": "Returns a Fantasy Performance",
                "operationId": "getPerformance",
                "parameters": [
                    {
                        "name": "fixture_id",
                        "in": "path",
                        "description": "Fixture ID of Fantasy Performance to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID of Fantasy Performance to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Performance not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/getPerformanceSFS/{series_id}/{round_id}/{player_id}": {
            "get": {
                "tags": [
                    "Performance"
                ],
                "summary": "Find Fantasy Performance by PlayerID",
                "description": "Returns a Fantasy Performance",
                "operationId": "getPerformanceSFS",
                "parameters": [
                    {
                        "name": "series_id",
                        "in": "path",
                        "description": "Series ID of Fantasy Performance to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "Round ID of Fantasy Performance to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID of Fantasy Performance to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Performance not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/scorecard/{fixture_id}": {
            "get": {
                "tags": [
                    "Scorecard"
                ],
                "summary": "Get Scorecard by Fixture ID",
                "description": "Returns Scorecard data by fixture",
                "operationId": "getScorecard",
                "parameters": [
                    {
                        "name": "fixture_id",
                        "in": "path",
                        "description": "ID of fixture",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Invalid Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/scorecard/sfs/{round_id}": {
            "get": {
                "tags": [
                    "Scorecard"
                ],
                "summary": "Get Scorecard by Round ID",
                "description": "Returns Scorecard data by round",
                "operationId": "getScorecardSFS",
                "parameters": [
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "ID of round",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Invalid Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/seriescontests": {
            "get": {
                "tags": [
                    "SeriesContests"
                ],
                "summary": "Get Contest information",
                "description": "Returns List of all SeriesContests",
                "operationId": "getSeriesContests",
                "parameters": [
                    {
                        "name": "filter[series_id]",
                        "in": "query",
                        "description": "Filter SeriesContests by Series ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[size]",
                        "in": "query",
                        "description": "Filter SeriesContests by Size of contest",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[joined]",
                        "in": "query",
                        "description": "Filter SeriesContests by Joined users for the contest",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[total_prize]",
                        "in": "query",
                        "description": "Filter SeriesContests by Total Prize of contest",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[FeeRange]",
                        "in": "query",
                        "description": "Filter SeriesContests by Entry Fee of contest",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include model series",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SeriesContests"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "SeriesContests"
                ],
                "summary": "Create new Contest",
                "description": "Creates a new Contest & returns status",
                "operationId": "createSeriesContests",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SeriesContests"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/privateseriescontest": {
            "post": {
                "tags": [
                    "SeriesContests"
                ],
                "summary": "Create new Private Contest",
                "description": "Creates a new Private Contest & returns status",
                "operationId": "createPrivateSeriesContests",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SeriesContests"
                            },
                            "example": "\n    {\"series_id\": \"1\",\n  \"contest_name\": \"Grand League\",\n  \"size\": \"30\",\n  \"joined\": \"10\",\n  \"total_prize\": \"50\",\n  \"prize_splitup\": \"30,15,5\",\n  \"entry_fee\": \"5\",\n  \"multi\": \"0\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/seriescontests/{contestId}": {
            "get": {
                "tags": [
                    "SeriesContests"
                ],
                "summary": "Find contest by ID",
                "description": "Returns a single contest",
                "operationId": "getContestById",
                "parameters": [
                    {
                        "name": "contestId",
                        "in": "path",
                        "description": "ID of contest to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SeriesContests"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SeriesContests"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Contest not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/seriescontests/{contestID}": {
            "put": {
                "tags": [
                    "SeriesContests"
                ],
                "summary": "Update an existing Contest",
                "description": "Update an existing Contest",
                "operationId": "updateSeriesContests",
                "parameters": [
                    {
                        "name": "contestID",
                        "in": "path",
                        "description": "ID of contest to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Contest object that needs to be updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SeriesContests"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Contest not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/series": {
            "get": {
                "tags": [
                    "Series"
                ],
                "summary": "Get Series information",
                "description": "Returns List of all Series",
                "operationId": "getSeries",
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Series"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Series"
                ],
                "summary": "Create new Series",
                "description": "Creates a new Series & returns status",
                "operationId": "createSeries",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Series"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/series/{seriesId}": {
            "get": {
                "tags": [
                    "Series"
                ],
                "summary": "Find series by ID",
                "description": "Returns a single series",
                "operationId": "getSquadById",
                "parameters": [
                    {
                        "name": "series",
                        "in": "path",
                        "description": "ID of series to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Series"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Series"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Series not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/series/{seriesID}": {
            "put": {
                "tags": [
                    "Series"
                ],
                "summary": "Update an existing Series",
                "description": "Update an existing Series",
                "operationId": "updateSeries",
                "parameters": [
                    {
                        "name": "seriesID",
                        "in": "path",
                        "description": "ID of series to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Squad object that needs to be updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Series"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Series not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/squads": {
            "get": {
                "tags": [
                    "Squads"
                ],
                "summary": "Get Squad information",
                "description": "Returns List of all Squads",
                "operationId": "getSquads",
                "parameters": [
                    {
                        "name": "filter[team_id]",
                        "in": "query",
                        "description": "Team ID to filter the Returns by Squads",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[player_type]",
                        "in": "query",
                        "description": "Player Type to filter the Returns by Squads",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Batsman",
                                    "Wicket Keeper",
                                    "Allrounder",
                                    "Bowler"
                                ]
                            }
                        }
                    },
                    {
                        "name": "series_id",
                        "in": "query",
                        "description": "ID of Series",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Squads"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Squads"
                ],
                "summary": "Create new Squad",
                "description": "Creates a new Squad & returns status",
                "operationId": "createSquads",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Squads"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/squads/{squadsId}": {
            "get": {
                "tags": [
                    "Squads"
                ],
                "summary": "Find squad by ID",
                "description": "Returns a single squad",
                "operationId": "getSquadById",
                "parameters": [
                    {
                        "name": "squad",
                        "in": "path",
                        "description": "ID of squad to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Squads"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Squads"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Squads not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/playerInfo/{series_id}/{p_id}/{fixture_type}": {
            "get": {
                "tags": [
                    "Squads"
                ],
                "summary": "Get Player Fantasy info",
                "description": "Returns a Fantasy info",
                "operationId": "getPlayerInfo",
                "parameters": [
                    {
                        "name": "series_id",
                        "in": "path",
                        "description": "ID of Series",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "p_id",
                        "in": "path",
                        "description": "ID of Player to get info",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "fixture_type",
                        "in": "path",
                        "description": "Type of Fixture",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "TEST",
                                    "ODI",
                                    "T20"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Squads"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Squads"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Player Stats not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/playerInfoSeries/{series_id}/{p_id}/{fixture_type}": {
            "get": {
                "tags": [
                    "Squads"
                ],
                "summary": "Get Player Fantasy info for Series",
                "description": "Returns a Fantasy info",
                "operationId": "getPlayerInfoSeries",
                "parameters": [
                    {
                        "name": "series_id",
                        "in": "path",
                        "description": "ID of Series",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "p_id",
                        "in": "path",
                        "description": "ID of Player to get info",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "fixture_type",
                        "in": "path",
                        "description": "Type of Fixture",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "TEST",
                                    "ODI",
                                    "T20"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Squads"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Squads"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Player Stats not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/squads/{squadsID}": {
            "put": {
                "tags": [
                    "Squads"
                ],
                "summary": "Update an existing Squad",
                "description": "Update an existing Squad",
                "operationId": "updateSquads",
                "parameters": [
                    {
                        "name": "squadsID",
                        "in": "path",
                        "description": "ID of squad to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Squad object that needs to be updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Squads"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Fixture not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/team": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Get Team information",
                "description": "Returns List of all Teams",
                "operationId": "getTeams",
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Teams"
                ],
                "summary": "Create new Team",
                "description": "Creates a new Team & returns status",
                "operationId": "createTeam",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/teamwithSquad": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Get Team information along with Squads",
                "description": "Returns List of all Teams with Squads",
                "operationId": "getteamwithsquad",
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/team/{teamId}": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Find team by ID",
                "description": "Returns a single team",
                "operationId": "getTeamById",
                "parameters": [
                    {
                        "name": "teamId",
                        "in": "path",
                        "description": "ID of team to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Team not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/team/{teamID}": {
            "put": {
                "tags": [
                    "Teams"
                ],
                "summary": "Update an existing Team",
                "description": "Update an existing Team",
                "operationId": "updateTeams",
                "parameters": [
                    {
                        "name": "teamID",
                        "in": "path",
                        "description": "ID of team to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Team object that needs to be updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Team not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/userAccount": {
            "get": {
                "tags": [
                    "UserAccount"
                ],
                "summary": "Get User Account information for current user",
                "description": "Returns User Account Details of current user",
                "operationId": "getuserAccount",
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAccount"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/userAccount/personal": {
            "post": {
                "tags": [
                    "UserAccount"
                ],
                "summary": "Add PersonalUser Details",
                "description": "Adds User Personal Details & returns response",
                "operationId": "addUserDetails - Personal",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAccount"
                            },
                            "example": "{\n  \"first_name\": \"Ramesh\",\n  \"last_name\": \"Kumar\",\n  \"sex\": \"1\",\n  \"dob\": \"1990-04-23\",\n  \"state\": \"Tamil Nadu\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/userAccount/langNfav": {
            "post": {
                "tags": [
                    "UserAccount"
                ],
                "summary": "Add Language Preference & Favorite Team Details",
                "description": "Adds User Language Preference & Favorite Team & returns response",
                "operationId": "addUserDetails - langNfav",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAccount"
                            },
                            "example": "{\n  \"language_pref\": \"1\",\n  \"fav_team\": \"5,6\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/userAccount/teamName": {
            "post": {
                "tags": [
                    "UserAccount"
                ],
                "summary": "Add Team Name",
                "description": "Adds Name of Team & returns response",
                "operationId": "addTeamName",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAccount"
                            },
                            "example": "{\n  \"team_name\": \"MyBestXI\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/userAccount/panDetails": {
            "post": {
                "tags": [
                    "UserAccount"
                ],
                "summary": "Add PAN User Details",
                "description": "Adds User PAN Details & returns response",
                "operationId": "addUserDetails - PAN",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "pan_name": {
                                        "description": "Name as per PAN records",
                                        "type": "string"
                                    },
                                    "pan": {
                                        "description": "PAN No. as per PAN records",
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "PAN scan to upload, max 2 Mb",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/userAccount/bankDetails": {
            "post": {
                "tags": [
                    "UserAccount"
                ],
                "summary": "Add Bank User Details",
                "description": "Adds User Bank Details & returns response",
                "operationId": "addUserDetails - Bank",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "account_name": {
                                        "description": "Name as per Bank records",
                                        "type": "string"
                                    },
                                    "account_number": {
                                        "description": "Account No. as per Bank records",
                                        "type": "double"
                                    },
                                    "ifsc_code": {
                                        "description": "IFSC Code of the Bank",
                                        "type": "string"
                                    },
                                    "account_type": {
                                        "description": "Account type: 1 - Savings, 2 - Current, 3 - Others",
                                        "type": "integer"
                                    },
                                    "image": {
                                        "description": "Bank Statement to upload, max 4 Mb",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/userAccount/sendOTP": {
            "post": {
                "tags": [
                    "UserAccount"
                ],
                "summary": "sendOTP to provided mobile number",
                "description": "sends OTP & returns response",
                "operationId": "User Personal - sendOTP",
                "requestBody": {
                    "description": "Mobile number to send OTP",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAccount"
                            },
                            "example": "{\n\"mobile\":\"9999999999\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/userAccount/verifyOTP": {
            "post": {
                "tags": [
                    "UserAccount"
                ],
                "summary": "verifyOTP to provided mobile number & OTP",
                "description": "verifies OTP & returns response",
                "operationId": "User Personal - verifyOTP",
                "requestBody": {
                    "description": "Mobile number to send OTP",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAccount"
                            },
                            "example": "{\n\"mobile\":\"9999999999\",\n\"otp\":\"1234\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/usermoney": {
            "get": {
                "tags": [
                    "UserMoney"
                ],
                "summary": "Get userMoney information",
                "description": "Returns List of all userMoney",
                "operationId": "getuserMoney",
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include user data, eg., user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserMoney"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "UserMoney"
                ],
                "summary": "Create new Usermoney",
                "description": "Creates a new UserMoney & returns status",
                "operationId": "adduserMoney",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserMoney"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/updateusermoney/": {
            "put": {
                "tags": [
                    "UserMoney"
                ],
                "summary": "Update an existing User Balance",
                "description": "Update an existing User Balance",
                "operationId": "updateUserMoney",
                "requestBody": {
                    "description": "User Money object that needs to be updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserMoney"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "User Data not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/withdraw": {
            "post": {
                "tags": [
                    "UserMoney"
                ],
                "summary": "Withdraw Request",
                "description": "Verifies User & submits withdrawal & returns status",
                "operationId": "withdraw",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {},
                            "example": "{\n  \"amount\": \"20\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payment": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Make a Payment",
                "description": "Make a Payment & returns status",
                "operationId": "makePayment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserPayments"
                            },
                            "example": "{\n  \"amount\": \"20\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/userTeams/{fixture_id}/team/{team}": {
            "get": {
                "tags": [
                    "UserTeams"
                ],
                "summary": "Grouped by Team, Get userTeam information with player details & cap/vc details",
                "description": "Returns List of all UserTeams",
                "operationId": "userTeams",
                "parameters": [
                    {
                        "name": "fixture_id",
                        "in": "path",
                        "description": "Filter UserTeams by Fixture ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "description": "Filter UserTeams by Team - use 0 for all teams",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTeamsResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/userTeamsbyUser/{fixture_id}/team/{team}/user/{userID}": {
            "get": {
                "tags": [
                    "UserTeams"
                ],
                "summary": "For each user, Get userTeam information with player details & cap/vc details",
                "description": "Returns List of all UserTeams",
                "operationId": "userTeamsbyUser",
                "parameters": [
                    {
                        "name": "fixture_id",
                        "in": "path",
                        "description": "Select UserTeams by Fixture ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "description": "Select UserTeams by Team",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "Select UserTeams by User",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTeamsResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/SFSuserTeamsbyUser/{series_id}/{round_id}/user/{userID}": {
            "get": {
                "tags": [
                    "UserTeams"
                ],
                "summary": "For each user, Get userTeam information with player details & cap/vc details",
                "description": "Returns List of all UserTeams",
                "operationId": "SFSuserTeamsbyUser",
                "parameters": [
                    {
                        "name": "series_id",
                        "in": "path",
                        "description": "Select UserTeams by Series ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "Select UserTeams by Round ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "Select UserTeams by User",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTeamsResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/downloadteams/{fixture_id}/{contest_id}": {
            "get": {
                "tags": [
                    "UserTeams"
                ],
                "summary": "All teams of users in that contest",
                "description": "Returns List of all UserTeams",
                "operationId": "downloadteams",
                "parameters": [
                    {
                        "name": "fixture_id",
                        "in": "path",
                        "description": "Select UserTeams by Fixture ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contest_id",
                        "in": "path",
                        "description": "Select UserTeams by Contest ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTeamsResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/downloadSFSUserTeams/{series_id}/{contest_id}/{round_id}": {
            "get": {
                "tags": [
                    "UserTeams"
                ],
                "summary": "All teams of users in that contest",
                "description": "Returns List of all UserTeams",
                "operationId": "downloadSFSteams",
                "parameters": [
                    {
                        "name": "series_id",
                        "in": "path",
                        "description": "Select UserTeams by Series ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contest_id",
                        "in": "path",
                        "description": "Select UserTeams by Contest ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "Select UserTeams by Round ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTeamsSeriesResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/getUserTeams11/{fixture_id}/team/{team}": {
            "get": {
                "tags": [
                    "UserTeams"
                ],
                "summary": "Get userTeam information with player details & cap/vc details",
                "description": "Returns List of all UserTeams",
                "operationId": "getUserTeams11",
                "parameters": [
                    {
                        "name": "fixture_id",
                        "in": "path",
                        "description": "Filter UserTeams by Fixture ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "description": "Filter UserTeams by Team - use 0 for all teams",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTeamsResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/SFSgetuserTeams/{series_id}/{round_id}": {
            "get": {
                "tags": [
                    "UserTeams"
                ],
                "summary": "Get SFS userTeam information grouped by team with player details & cap/vc details",
                "description": "Returns List of all UserTeams for SFS grped by team",
                "operationId": "SFSgetuserTeams11",
                "parameters": [
                    {
                        "name": "series_id",
                        "in": "path",
                        "description": "Series ID of userTeam",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "Round ID of userTeam",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTeamsResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/addUserTeams11/{fixture_id}/team/{team}": {
            "post": {
                "tags": [
                    "UserTeams"
                ],
                "summary": "Create new userTeam of 11 players",
                "description": "Adds 11 players to userTeams & returns status",
                "operationId": "createUserTeams11",
                "parameters": [
                    {
                        "name": "fixture_id",
                        "in": "path",
                        "description": "Fixture ID of userTeam to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "description": "Team count of userTeam to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "userTeam object that needs to be added"
                            },
                            "example": "{\"0\":31,\"1\":32,\"2\":33,\"3\":34,\"4\":35,\"5\":36,\"6\":37,\"7\":38,\"8\":39,\"9\":40,\"10\":41,\"cap\":39,\"vc\":40,\"wk\":32}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/SFSadduserTeams/{series_id}/{round_id}": {
            "post": {
                "tags": [
                    "UserTeams"
                ],
                "summary": "Create new userTeam of 11 players",
                "description": "Adds 11 players to userTeams & returns status",
                "operationId": "SFScreateUserTeams11",
                "parameters": [
                    {
                        "name": "series_id",
                        "in": "path",
                        "description": "Series ID of userTeam to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "Round ID of userTeam to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "userTeam object that needs to be added"
                            },
                            "example": "{\"0\":31,\"1\":32,\"2\":33,\"3\":34,\"4\":35,\"5\":36,\"6\":37,\"7\":38,\"8\":39,\"9\":40,\"10\":41,\"cap\":39,\"vc\":40,\"wk\":32}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/userTeams/{userTeamID}": {
            "put": {
                "tags": [
                    "UserTeams"
                ],
                "summary": "Update an existing userTeam",
                "description": "Update an existing userTeam",
                "operationId": "updateUserTeams",
                "parameters": [
                    {
                        "name": "userTeamID",
                        "in": "path",
                        "description": "ID of userTeam to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "userTeam object that needs to be updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserTeams"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTeams"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTeams"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "userTeam not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/updateUserTeams11/{fixture_id}/team/{team}": {
            "put": {
                "tags": [
                    "UserTeams"
                ],
                "summary": "Update userTeam with 11 players",
                "description": "Updates 11 players to userTeams & returns status",
                "operationId": "updateUserTeams11",
                "parameters": [
                    {
                        "name": "fixture_id",
                        "in": "path",
                        "description": "Fixture ID of userTeam to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "description": "Team count of userTeam to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "array of player ids with Captain & Vice Captain"
                            },
                            "example": "{\"0\":31,\"1\":32,\"2\":33,\"3\":34,\"4\":35,\"5\":36,\"6\":37,\"7\":38,\"8\":39,\"9\":40,\"10\":41,\"cap\":39,\"vc\":40,\"wk\":32}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/SFSteamupdate/{series_id}/{round_id}": {
            "put": {
                "tags": [
                    "UserTeams"
                ],
                "summary": "Updarte userTeam of 11 players",
                "description": "Updates 11 players to userTeams & returns status",
                "operationId": "SFSteamupdate",
                "parameters": [
                    {
                        "name": "series_id",
                        "in": "path",
                        "description": "Series ID of userTeam to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "Round ID of userTeam to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "userTeam object that needs to be added"
                            },
                            "example": "{\"0\":1,\"1\":2,\"2\":3,\"3\":3,\"4\":1,\"5\":1,\"6\":2,\"7\":1,\"8\":2,\"9\":1,\"10\":3,\"cap\":2,\"vc\":3}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/userTransaction": {
            "get": {
                "tags": [
                    "UserTransaction"
                ],
                "summary": "Get User Transaction information for current user",
                "description": "Returns User Transaction Details of current user",
                "operationId": "getuserTransaction",
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTransactions"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "UserTransaction"
                ],
                "summary": "Add Transaction Details",
                "description": "Adds User Transaction Details & returns response",
                "operationId": "add User Transaction",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserTransactions"
                            },
                            "example": "{\n  \"debit_credit\": \"1\",\n  \"amount\": \"20.0\",\n  \"fixture_series_id\": \"15\",\n  \"contest_id\": \"7\",\n  \"game_type\": \"1\",\n  \"transaction_type\": \"1\"\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/usertransfers/{series_id}/{round_id}/{fixture_id}": {
            "get": {
                "tags": [
                    "UserTransfers"
                ],
                "summary": "Get UserTransfers & grped by Rounds",
                "description": "Returns List of all UserTransfers grped by Rounds",
                "operationId": "getusertransfers",
                "parameters": [
                    {
                        "name": "series_id",
                        "in": "path",
                        "description": "series id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "round id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "fixture_id",
                        "in": "path",
                        "description": "fixture id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTransfers"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/usertransfers": {
            "post": {
                "tags": [
                    "UserTransfers"
                ],
                "summary": "Create new UserTransfers",
                "description": "Creates a new UserTransfers & returns status",
                "operationId": "addusertransfers",
                "requestBody": {
                    "description": "User Transfer Array",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserTransfers"
                            },
                            "example": "[{\n  \"p_id_deleted\": \"20\",\n  \"p_id_added\": \"18\",\n  \"c_id\": \"29\",\n  \"vc_id\": \"30\",\n  \"wk_id\": \"31\",\n  \"series_id\": \"3\",\n  \"round_id\": \"3\"\n},{\n  \"p_id_deleted\": \"21\",\n  \"p_id_added\": \"31\",\n  \"c_id\": \"29\",\n  \"vc_id\": \"30\",\n  \"wk_id\":\"31\",\n  \"series_id\": \"3\",\n  \"round_id\": \"3\"\n}]"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/transferstatus/{series_id}/{round_id}": {
            "get": {
                "tags": [
                    "UserTransfers"
                ],
                "summary": "Get UserTransfers Status",
                "description": "Returns status of UserTransfers",
                "operationId": "gettransferstatus",
                "parameters": [
                    {
                        "name": "series_id",
                        "in": "path",
                        "description": "series id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "round id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTransfers"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Contests": {
                "title": "Contests Model",
                "description": "Contests Model",
                "properties": {
                    "series_id": {
                        "description": "Series ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "fixture_id": {
                        "description": "Match ID",
                        "type": "integer",
                        "example": "3"
                    },
                    "contest_name": {
                        "description": "Name of the Contest",
                        "type": "string",
                        "example": "Grand League"
                    },
                    "contest_type": {
                        "description": "Type of the Contest",
                        "type": "string",
                        "example": "normal"
                    },
                    "caption": {
                        "description": "Caption for Contest",
                        "type": "string",
                        "example": "Get ready for mega winnings"
                    },
                    "size": {
                        "description": "Size of the Contest",
                        "type": "integer",
                        "example": "30"
                    },
                    "joined": {
                        "description": "Joined users for the Contest",
                        "type": "integer",
                        "example": "10"
                    },
                    "total_prize": {
                        "description": "Total Prize of the Contest",
                        "type": "double",
                        "example": "50"
                    },
                    "prize_splitup": {
                        "description": "Prize Splitup of the Contest",
                        "type": "string",
                        "example": "30,15,5"
                    },
                    "entry_fee": {
                        "description": "Entry Fee of the Contest",
                        "type": "integer",
                        "example": "5"
                    },
                    "guaranteed": {
                        "description": "is guaranteed or not",
                        "type": "boolean",
                        "example": "1"
                    },
                    "multi": {
                        "description": "is multi entry or not",
                        "type": "boolean",
                        "example": "0"
                    }
                },
                "type": "object"
            },
            "Fixture": {
                "title": "Fixture Model",
                "description": "Fixture Model",
                "properties": {
                    "fixture_name": {
                        "description": "Name of the Match",
                        "type": "string",
                        "example": "Australia vs India - 2018 - Test Match 3"
                    },
                    "fixture_api": {
                        "description": "API key of the match",
                        "type": "string",
                        "example": "aus-ind-2018"
                    },
                    "fixture_sh": {
                        "description": "Short Name of the Match",
                        "type": "string",
                        "example": "Aus v Ind - Test 3"
                    },
                    "fixture_between": {
                        "description": "Array of teams involved in that match",
                        "type": "string",
                        "example": "1,2"
                    },
                    "date_time": {
                        "description": "Start time of the match",
                        "type": "datetime",
                        "example": "2018-12-01 09:00:00"
                    },
                    "fixture_status": {
                        "description": "Status of the match; live - 1, upcoming - 2, completed - 3",
                        "type": "integer",
                        "example": "2"
                    },
                    "venue": {
                        "description": "Venue of the match",
                        "type": "string",
                        "example": "Melbourne Cricket Ground, Melbourne, Australia"
                    },
                    "type": {
                        "description": "Type of match",
                        "type": "string",
                        "enum": [
                            "Test",
                            "ODI",
                            "T20",
                            "T10"
                        ],
                        "example": "Test"
                    },
                    "series_id": {
                        "description": "Series ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "round_id": {
                        "description": "Round ID",
                        "type": "integer",
                        "example": "10"
                    },
                    "team_a": {
                        "description": "Team A",
                        "type": "integer",
                        "example": "1"
                    },
                    "team_b": {
                        "description": "Team B",
                        "type": "integer",
                        "example": "2"
                    }
                },
                "type": "object"
            },
            "DFSLeaderboardResource": {
                "title": "DFSLeaderboard Resource",
                "description": "DFSLeaderboard Resource"
            },
            "FixtureBaseResource": {
                "title": "Fixture Base Resource",
                "description": "Fixture Base Resource"
            },
            "FixtureResource": {
                "title": "Fixture Resource",
                "description": "Fixture Resource",
                "properties": {
                    "fixture_name": {
                        "description": "Name of the Match",
                        "type": "string",
                        "example": "Australia vs India - 2018 - Test Match 3"
                    },
                    "fixture_api": {
                        "description": "API key of the match",
                        "type": "string",
                        "example": "aus-ind-2018"
                    },
                    "fixture_sh": {
                        "description": "Short Name of the Match",
                        "type": "string",
                        "example": "Aus v Ind - Test 3"
                    },
                    "fixture_between": {
                        "description": "Array of teams involved in that match",
                        "type": "string",
                        "example": "[\"1\",\"2\"]"
                    },
                    "date_time": {
                        "description": "Start time of the match",
                        "type": "datetime",
                        "example": "2018-12-01 09:00:00"
                    },
                    "fixture_status": {
                        "description": "Status of the match; live - 1, upcoming - 2, completed - 3",
                        "type": "integer",
                        "example": "2"
                    },
                    "venue": {
                        "description": "Venue of the match",
                        "type": "string",
                        "example": "Melbourne Cricket Ground, Melbourne, Australia"
                    },
                    "type": {
                        "description": "Type of match",
                        "type": "string",
                        "enum": [
                            "Test",
                            "ODI",
                            "T20"
                        ],
                        "example": "Test"
                    },
                    "series_id": {
                        "description": "Series ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "totalprize": {
                        "description": "Total Prize",
                        "type": "integer",
                        "example": "50"
                    },
                    "team": {
                        "description": "Team relation",
                        "$ref": "#/components/schemas/Team"
                    }
                },
                "type": "object"
            },
            "FixtureSeriesResource": {
                "title": "FixtureSeries Resource",
                "description": "FixtureSeries Resource"
            },
            "MyContestsResource": {
                "title": "MyContests Resource",
                "description": "MyContests Resource",
                "properties": {
                    "fixture_name": {
                        "description": "Name of the Match",
                        "type": "string",
                        "example": "Australia vs India - 2018 - Test Match 3"
                    },
                    "fixture_api": {
                        "description": "API key of the match",
                        "type": "string",
                        "example": "aus-ind-2018"
                    },
                    "fixture_sh": {
                        "description": "Short Name of the Match",
                        "type": "string",
                        "example": "Aus v Ind - Test 3"
                    },
                    "fixture_between": {
                        "description": "Array of teams involved in that match",
                        "type": "string",
                        "example": "[\"1\",\"2\"]"
                    },
                    "date_time": {
                        "description": "Start time of the match",
                        "type": "datetime",
                        "example": "2018-12-01 09:00:00"
                    },
                    "fixture_status": {
                        "description": "Status of the match; live - 1, upcoming - 2, completed - 3",
                        "type": "integer",
                        "example": "2"
                    },
                    "venue": {
                        "description": "Venue of the match",
                        "type": "string",
                        "example": "Melbourne Cricket Ground, Melbourne, Australia"
                    },
                    "type": {
                        "description": "Type of match",
                        "type": "string",
                        "enum": [
                            "Test",
                            "ODI",
                            "T20"
                        ],
                        "example": "Test"
                    },
                    "series_id": {
                        "description": "Series ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "totalprize": {
                        "description": "Total Prize",
                        "type": "integer",
                        "example": "50"
                    },
                    "team": {
                        "description": "Team relation",
                        "$ref": "#/components/schemas/Team"
                    }
                },
                "type": "object"
            },
            "MyContestsRoundsResource": {
                "title": "MyContestsRounds Resource",
                "description": "MyContestsRounds Resource"
            },
            "MyContestsSeriesResource": {
                "title": "MyContestsSeries Resource",
                "description": "MyContestsSeries Resource",
                "properties": {
                    "fixture_name": {
                        "description": "Name of the Match",
                        "type": "string",
                        "example": "Australia vs India - 2018 - Test Match 3"
                    },
                    "fixture_api": {
                        "description": "API key of the match",
                        "type": "string",
                        "example": "aus-ind-2018"
                    },
                    "fixture_sh": {
                        "description": "Short Name of the Match",
                        "type": "string",
                        "example": "Aus v Ind - Test 3"
                    },
                    "fixture_between": {
                        "description": "Array of teams involved in that match",
                        "type": "string",
                        "example": "[\"1\",\"2\"]"
                    },
                    "date_time": {
                        "description": "Start time of the match",
                        "type": "datetime",
                        "example": "2018-12-01 09:00:00"
                    },
                    "fixture_status": {
                        "description": "Status of the match; live - 1, upcoming - 2, completed - 3",
                        "type": "integer",
                        "example": "2"
                    },
                    "venue": {
                        "description": "Venue of the match",
                        "type": "string",
                        "example": "Melbourne Cricket Ground, Melbourne, Australia"
                    },
                    "type": {
                        "description": "Type of match",
                        "type": "string",
                        "enum": [
                            "Test",
                            "ODI",
                            "T20"
                        ],
                        "example": "Test"
                    },
                    "series_id": {
                        "description": "Series ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "totalprize": {
                        "description": "Total Prize",
                        "type": "integer",
                        "example": "50"
                    },
                    "team": {
                        "description": "Team relation",
                        "$ref": "#/components/schemas/Team"
                    }
                },
                "type": "object"
            },
            "RoundResource": {
                "title": "Round Resource",
                "description": "Round Resource"
            },
            "SFSLeaderboardResource": {
                "title": "SFSLeaderboard Resource",
                "description": "SFSLeaderboard Resource"
            },
            "TeamResource": {
                "title": "Team Resource",
                "description": "Team Resource",
                "properties": {
                    "team_name": {
                        "description": "Name of the Team",
                        "type": "string",
                        "example": "Australia"
                    },
                    "team_api": {
                        "description": "API key of the Team",
                        "type": "string",
                        "example": "aus"
                    },
                    "team_logo": {
                        "description": "ID of Team logo",
                        "type": "integer",
                        "example": "3"
                    },
                    "team_sn": {
                        "description": "Short Name of the Team",
                        "type": "string",
                        "example": "AUS"
                    },
                    "logo": {
                        "description": "logo path in the server",
                        "type": "string",
                        "example": "/pathtologo/logo.png"
                    },
                    "squads": {
                        "description": "Squad relation",
                        "$ref": "#/components/schemas/Squads"
                    }
                },
                "type": "object"
            },
            "UserTeamsResource": {
                "title": "UserTeams Resource",
                "description": "UserTeams Resource",
                "properties": {
                    "id": {
                        "description": "ID of the UserTeams",
                        "type": "integer",
                        "example": "2"
                    },
                    "u_id": {
                        "description": "ID of current User",
                        "type": "integer",
                        "example": "3"
                    },
                    "p_id": {
                        "description": "Player ID of selected choice by user",
                        "type": "integer",
                        "example": "2"
                    },
                    "fixture_id": {
                        "description": "Fixture ID",
                        "type": "integer",
                        "example": "2"
                    },
                    "team": {
                        "description": "Team Count",
                        "type": "integer",
                        "example": "24"
                    },
                    "title": {
                        "description": "title for the player - captain or vcaptain or none",
                        "type": "string",
                        "example": "captain"
                    },
                    "squads": {
                        "description": "Squads relation",
                        "$ref": "#/components/schemas/Squads"
                    }
                },
                "type": "object"
            },
            "UserTeamsSeriesEachResource": {
                "title": "UserTeams Series Resource",
                "description": "UserTeams Series Resource",
                "properties": {
                    "id": {
                        "description": "ID of the UserTeams",
                        "type": "integer",
                        "example": "2"
                    },
                    "u_id": {
                        "description": "ID of current User",
                        "type": "integer",
                        "example": "3"
                    },
                    "p_id": {
                        "description": "Player ID of selected choice by user",
                        "type": "integer",
                        "example": "2"
                    },
                    "round_id": {
                        "description": "Fixture ID",
                        "type": "integer",
                        "example": "2"
                    },
                    "title": {
                        "description": "title for the player - captain or vcaptain or none",
                        "type": "string",
                        "example": "captain"
                    },
                    "squads": {
                        "description": "Squads relation",
                        "$ref": "#/components/schemas/Squads"
                    }
                },
                "type": "object"
            },
            "UserTeamsSeriesResource": {
                "title": "UserTeams Series Resource",
                "description": "UserTeams Series Resource",
                "properties": {
                    "id": {
                        "description": "ID of the UserTeams",
                        "type": "integer",
                        "example": "2"
                    },
                    "u_id": {
                        "description": "ID of current User",
                        "type": "integer",
                        "example": "3"
                    },
                    "p_id": {
                        "description": "Player ID of selected choice by user",
                        "type": "integer",
                        "example": "2"
                    },
                    "round_id": {
                        "description": "Fixture ID",
                        "type": "integer",
                        "example": "2"
                    },
                    "title": {
                        "description": "title for the player - captain or vcaptain or none",
                        "type": "string",
                        "example": "captain"
                    },
                    "squads": {
                        "description": "Squads relation",
                        "$ref": "#/components/schemas/Squads"
                    }
                },
                "type": "object"
            },
            "JoinedContests": {
                "title": "JoinedContests Model",
                "description": "JoinedContests Model",
                "properties": {
                    "team_id": {
                        "description": "Team ID",
                        "type": "integer",
                        "example": "3"
                    },
                    "fixture_id": {
                        "description": "Fixture ID",
                        "type": "string",
                        "example": "10"
                    },
                    "contest_id": {
                        "description": "Contest ID",
                        "type": "string",
                        "example": "5"
                    },
                    "rank": {
                        "description": "Rank",
                        "type": "integer",
                        "example": "30, if not defined use 0"
                    },
                    "score": {
                        "description": "Score",
                        "type": "integer",
                        "example": "10, if not defined use 0"
                    },
                    "winning": {
                        "description": "Winning",
                        "type": "double",
                        "example": "50, if not defined use 0"
                    }
                },
                "type": "object"
            },
            "JoinedContestsRounds": {
                "title": "JoinedContestsRounds Model",
                "description": "JoinedContestsRounds Model",
                "properties": {
                    "series_id": {
                        "description": "Series ID",
                        "type": "integer",
                        "example": "10"
                    },
                    "team_id": {
                        "description": "Team ID",
                        "type": "integer",
                        "example": "3"
                    },
                    "contest_id": {
                        "description": "Contest ID",
                        "type": "string",
                        "example": "5"
                    },
                    "round_id": {
                        "description": "Round ID",
                        "type": "string",
                        "example": "5"
                    },
                    "fixture_id": {
                        "description": "Fixture ID",
                        "type": "string",
                        "example": "5"
                    },
                    "rank": {
                        "description": "Rank",
                        "type": "integer",
                        "example": "30, if not defined use 0"
                    },
                    "score": {
                        "description": "Score",
                        "type": "integer",
                        "example": "10, if not defined use 0"
                    }
                },
                "type": "object"
            },
            "JoinedContestsSeries": {
                "title": "JoinedContestsSeries Model",
                "description": "JoinedContestsSeries Model",
                "properties": {
                    "series_id": {
                        "description": "Series ID",
                        "type": "integer",
                        "example": "10"
                    },
                    "round_id": {
                        "description": "Round ID",
                        "type": "integer",
                        "example": "3"
                    },
                    "contest_id": {
                        "description": "Contest ID",
                        "type": "string",
                        "example": "5"
                    },
                    "rank": {
                        "description": "Rank",
                        "type": "integer",
                        "example": "30, if not defined use 0"
                    },
                    "score": {
                        "description": "Score",
                        "type": "integer",
                        "example": "10, if not defined use 0"
                    },
                    "winning": {
                        "description": "Winning",
                        "type": "double",
                        "example": "50, if not defined use 0"
                    }
                },
                "type": "object"
            },
            "performance": {
                "title": "Performance Model",
                "description": "Performance Model"
            },
            "Scorecard": {
                "title": "Scorecard Model",
                "description": "Scorecard Model"
            },
            "Series": {
                "title": "Series Model",
                "description": "Series Model",
                "properties": {
                    "series_name": {
                        "description": "Name of the Series",
                        "type": "string",
                        "example": "Australia v India - 2019"
                    },
                    "series_sh": {
                        "description": "Short Name of the Series",
                        "type": "string",
                        "example": "Aus v Ind 2019"
                    },
                    "teams": {
                        "description": "array of Teams involved",
                        "type": "string",
                        "example": "[\"1\",\"2\"]"
                    },
                    "type": {
                        "description": "Type of Series",
                        "type": "string",
                        "example": "T20"
                    }
                },
                "type": "object"
            },
            "SeriesContests": {
                "title": "SeriesContests Model",
                "description": "SeriesContests Model",
                "properties": {
                    "series_id": {
                        "description": "Series ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "contest_name": {
                        "description": "Name of the Contest",
                        "type": "string",
                        "example": "Grand League"
                    },
                    "contest_type": {
                        "description": "Type of the Contest",
                        "type": "string",
                        "example": "normal"
                    },
                    "caption": {
                        "description": "Caption for Contest",
                        "type": "string",
                        "example": "Get ready for mega winnings"
                    },
                    "size": {
                        "description": "Size of the Contest",
                        "type": "integer",
                        "example": "30"
                    },
                    "joined": {
                        "description": "Joined users for the Contest",
                        "type": "integer",
                        "example": "10"
                    },
                    "total_prize": {
                        "description": "Total Prize of the Contest",
                        "type": "double",
                        "example": "50"
                    },
                    "prize_splitup": {
                        "description": "Prize Splitup of the Contest",
                        "type": "string",
                        "example": "30,15,5"
                    },
                    "entry_fee": {
                        "description": "Entry Fee of the Contest",
                        "type": "integer",
                        "example": "5"
                    },
                    "guaranteed": {
                        "description": "is guaranteed or not",
                        "type": "boolean",
                        "example": "1"
                    },
                    "multi": {
                        "description": "is multi entry or not",
                        "type": "boolean",
                        "example": "0"
                    }
                },
                "type": "object"
            },
            "SeriesRounds": {
                "title": "SeriesRounds Model",
                "description": "SeriesRounds Model",
                "properties": {
                    "series_id": {
                        "description": "ID of the Series",
                        "type": "integer",
                        "example": "5"
                    },
                    "round_name": {
                        "description": "Name of the Round",
                        "type": "string",
                        "example": "IPL Round 1"
                    },
                    "round_sh": {
                        "description": "Short Name of the Round",
                        "type": "string",
                        "example": "T20"
                    },
                    "fixtures_inc": {
                        "description": "array of Teams involved",
                        "type": "string",
                        "example": "[\"1\",\"2\"]"
                    },
                    "date_time": {
                        "description": "Round Start datetime",
                        "type": "datetime",
                        "example": "2019-03-26 20:00:00"
                    },
                    "round_status": {
                        "description": "Status of the Round; live - 1, upcoming - 2, completed - 3",
                        "type": "integer",
                        "example": "2"
                    }
                },
                "type": "object"
            },
            "Squads": {
                "title": "Squads Model",
                "description": "Squads Model",
                "properties": {
                    "player_name": {
                        "description": "Name of the Player",
                        "type": "string",
                        "example": "Virat Kohli"
                    },
                    "team_id": {
                        "description": "ID of the Team",
                        "type": "integer",
                        "example": "2"
                    },
                    "player_type": {
                        "description": "ID of Team logo",
                        "type": "string",
                        "enum": [
                            "Wicket Keeper",
                            "Batsman",
                            "AllRounder",
                            "Bowler"
                        ],
                        "example": "Batsman"
                    },
                    "player_value": {
                        "description": "comma separated Values of the Player - Test value,ODI value,T20 value",
                        "type": "string",
                        "example": "8,9,11"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Squads"
                }
            },
            "Team": {
                "title": "Team Model",
                "description": "Team Model",
                "properties": {
                    "team_name": {
                        "description": "Name of the Team",
                        "type": "string",
                        "example": "Australia"
                    },
                    "team_api": {
                        "description": "API key of the Team",
                        "type": "string",
                        "example": "aus"
                    },
                    "team_logo": {
                        "description": "ID of Team logo",
                        "type": "integer",
                        "example": "3"
                    },
                    "team_sn": {
                        "description": "Short Name of the Team",
                        "type": "string",
                        "example": "AUS"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Team"
                }
            },
            "User": {
                "title": "User Model",
                "description": "User Model",
                "properties": {
                    "email": {
                        "description": "Email of the User",
                        "type": "string",
                        "example": "reachus@sciflare.com"
                    },
                    "password": {
                        "description": "Password",
                        "type": "string",
                        "example": "1234567"
                    },
                    "mobile": {
                        "description": "Mobile Number",
                        "type": "double",
                        "example": "9999999999"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "UserAccount": {
                "title": "UserAccount Model",
                "description": "UserAccount Model",
                "properties": {
                    "first_name": {
                        "description": "First Name of the User",
                        "type": "string",
                        "example": "Ramesh"
                    },
                    "last_name": {
                        "description": "Last Name of the User",
                        "type": "string",
                        "example": "Kumar"
                    },
                    "sex": {
                        "description": "Sex of the User, 1 - Male, 2 - Female, 3 - Others",
                        "type": "integer",
                        "example": "1"
                    },
                    "dob": {
                        "description": "DOB the User in YYYY-MM-DD format",
                        "type": "date",
                        "example": "1990-04-23"
                    },
                    "state": {
                        "description": "State",
                        "type": "string",
                        "example": "Tamil Nadu"
                    },
                    "pan_name": {
                        "description": "Name of the User according to PAN",
                        "type": "string",
                        "example": "Ramkesh Kumar P"
                    },
                    "pan": {
                        "description": "PAN number of the User",
                        "type": "string",
                        "example": "KPE5720H"
                    },
                    "pan_upload": {
                        "description": "Uploaded pan file name",
                        "type": "text",
                        "example": "pan_doc.jpg"
                    },
                    "pan_status": {
                        "description": "PAN Verified Status - 0,1",
                        "type": "boolean",
                        "example": "0"
                    },
                    "account_name": {
                        "description": "Full Name of the User as in Bank Account",
                        "type": "string",
                        "example": "P. Ramesh Kumar"
                    },
                    "account_number": {
                        "description": "Bank Acc no. of the User",
                        "type": "double",
                        "example": "130054678901"
                    },
                    "ifsc_code": {
                        "description": "IFSC Code of Bank Account",
                        "type": "string",
                        "example": "ICIC3005678"
                    },
                    "account_type": {
                        "description": "Account Type, 1 - Savings, 2 - Current, 3 - Others",
                        "type": "integer",
                        "example": "1"
                    },
                    "account_upload": {
                        "description": "Uploaded Account statement file name",
                        "type": "string",
                        "example": "bank_statement.pdf"
                    },
                    "account_status": {
                        "description": "Account Verified Status - 0,1",
                        "type": "boolean",
                        "example": "0"
                    },
                    "language_pref": {
                        "description": "Language Preference",
                        "type": "integer",
                        "example": "1"
                    },
                    "fav_team": {
                        "description": "Favorite Team",
                        "type": "integer",
                        "example": "5"
                    },
                    "avatar": {
                        "description": "User Avatar",
                        "type": "text",
                        "example": "avatar.png"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserAccount"
                }
            },
            "UserMoney": {
                "title": "UserMoney Model",
                "description": "UserMoney Model",
                "properties": {
                    "total_balance": {
                        "description": "Total Balance of the User",
                        "type": "float",
                        "example": "500.00"
                    },
                    "deposits": {
                        "description": "Deposits of the User",
                        "type": "float",
                        "example": "450.00"
                    },
                    "winnings": {
                        "description": "Winnings of the User",
                        "type": "float",
                        "example": "30.00"
                    },
                    "bonus": {
                        "description": "Bonus of the User",
                        "type": "float",
                        "example": "20.00"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserMoney"
                }
            },
            "UserPayments": {
                "title": "UserPayments Model",
                "description": "UserPayments Model",
                "properties": {
                    "u_id": {
                        "description": "ID of User",
                        "type": "integer",
                        "example": "1"
                    },
                    "order_id": {
                        "description": "Order ID",
                        "type": "string",
                        "example": "12312312"
                    },
                    "txn_id": {
                        "description": "Transaction ID",
                        "type": "string",
                        "example": "20180520111212800110168627700016987"
                    },
                    "status": {
                        "description": "Transaction Status",
                        "type": "string",
                        "example": "TXN_SUCCESS"
                    },
                    "amount": {
                        "description": "Transaction amount",
                        "type": "integer",
                        "example": "15.00"
                    },
                    "currency": {
                        "description": "Transaction Currency",
                        "type": "string",
                        "example": "INR"
                    },
                    "transaction_time": {
                        "description": "Transaction time",
                        "type": "datetime",
                        "example": "2019-04-23 12:54:67"
                    },
                    "transaction_data": {
                        "description": "Raw Transaction Data",
                        "type": "text",
                        "example": "text"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserPayments"
                }
            },
            "UserSocial": {
                "title": "UserSocial Model",
                "description": "UserSocial Model",
                "xml": {
                    "name": "UserSocial"
                }
            },
            "UserTeams": {
                "title": "User Teams Model",
                "description": "User Teams Model",
                "properties": {
                    "u_id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "p_id": {
                        "description": "Player ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "fixture_id": {
                        "description": "Match ID",
                        "type": "integer",
                        "example": "3"
                    },
                    "team": {
                        "description": "Team Count, max 6",
                        "type": "integer",
                        "example": "4"
                    }
                },
                "type": "object"
            },
            "UserTeamsCapVc": {
                "title": "User Teams Captain VCaptain Model",
                "description": "User Teams Captain VCaptain Model",
                "properties": {
                    "u_id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "fixture_id": {
                        "description": "Match ID",
                        "type": "integer",
                        "example": "3"
                    },
                    "cap_p_id": {
                        "description": "Captain Player ID",
                        "type": "integer",
                        "example": "9"
                    },
                    "vc_p_id": {
                        "description": "Vice Captain Player ID",
                        "type": "integer",
                        "example": "10"
                    },
                    "team": {
                        "description": "Team Count, max 6",
                        "type": "integer",
                        "example": "4"
                    }
                },
                "type": "object"
            },
            "UserTeamsCapVcSeries": {
                "title": "User Teams Captain VCaptain Model",
                "description": "User Teams Captain VCaptain Model",
                "properties": {
                    "u_id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "fixture_id": {
                        "description": "Match ID",
                        "type": "integer",
                        "example": "3"
                    },
                    "cap_p_id": {
                        "description": "Captain Player ID",
                        "type": "integer",
                        "example": "9"
                    },
                    "vc_p_id": {
                        "description": "Vice Captain Player ID",
                        "type": "integer",
                        "example": "10"
                    },
                    "team": {
                        "description": "Team Count, max 6",
                        "type": "integer",
                        "example": "4"
                    }
                },
                "type": "object"
            },
            "UserTeamsWkBat": {
                "title": "User Teams Wk Bat Model",
                "description": "User Teams Wk Bat Model",
                "properties": {
                    "u_id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "fixture_id": {
                        "description": "Fixture ID",
                        "type": "integer",
                        "example": "9"
                    },
                    "wk_p_id": {
                        "description": "Wk as Bat p_id",
                        "type": "integer",
                        "example": "4"
                    }
                },
                "type": "object"
            },
            "UserTeamsWkBatSeries": {
                "title": "User Teams Wk Bat Model",
                "description": "User Teams Wk Bat Model",
                "properties": {
                    "u_id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "series_id": {
                        "description": "Series ID",
                        "type": "integer",
                        "example": "3"
                    },
                    "round_id": {
                        "description": "Round ID",
                        "type": "integer",
                        "example": "9"
                    },
                    "wk_p_id": {
                        "description": "Wk as Bat p_id",
                        "type": "integer",
                        "example": "4"
                    }
                },
                "type": "object"
            },
            "UserTransactions": {
                "title": "UserTransactions Model",
                "description": "UserTransactions Model",
                "properties": {
                    "u_id": {
                        "description": "ID of User",
                        "type": "integer",
                        "example": "1"
                    },
                    "debit_credit": {
                        "description": "1=debit,2=credit,3=others",
                        "type": "integer",
                        "example": "1"
                    },
                    "amount": {
                        "description": "Transaction amount",
                        "type": "integer",
                        "example": "15.00"
                    },
                    "transaction_time": {
                        "description": "Transaction time",
                        "type": "datetime",
                        "example": "2019-04-23 12:54:67"
                    },
                    "fixture_series_id": {
                        "description": "Fixture ID or Series ID",
                        "type": "integer",
                        "example": "22"
                    },
                    "contest_id": {
                        "description": "Contest ID",
                        "type": "integer",
                        "example": "12"
                    },
                    "game_type": {
                        "description": "Game Type: 1 - dfs, 2 - sfs",
                        "type": "string",
                        "example": "2"
                    },
                    "transaction_type": {
                        "description": "Type of Transaction: 1 - C_Admin , 2 - C_Refund , 3 - C_Winnings , 4 - C_PayTM , 5 - C_PayU , 6 - C_Coupon, 7 - C_Referral, 8 - C_System, 9 - D_Withdrawal , 10 - D_EntryFee , 11 - D_Admin",
                        "type": "integer",
                        "example": "4"
                    },
                    "balance": {
                        "description": "Balance after transaction",
                        "type": "float",
                        "example": "56.70"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserTransactions"
                }
            },
            "UserTransfers": {
                "title": "User Transfers Model",
                "description": "User Transfers Model",
                "properties": {
                    "u_id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "p_id_deleted": {
                        "description": "Player who has been deleted",
                        "type": "integer",
                        "example": "3"
                    },
                    "p_id_added": {
                        "description": "Player who has been added",
                        "type": "integer",
                        "example": "9"
                    },
                    "team_id": {
                        "description": "Team ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "series_id": {
                        "description": "Series ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "round_id": {
                        "description": "Round ID",
                        "type": "integer",
                        "example": "3"
                    },
                    "contest_id": {
                        "description": "Contest ID",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "UserWithdrawal": {
                "title": "UserWithdrawal Model",
                "description": "UserWithdrawal Model",
                "properties": {
                    "u_id": {
                        "description": "ID of User",
                        "type": "integer",
                        "example": "5"
                    },
                    "withdraw_req_amt": {
                        "description": "Withdrawal Request of the User",
                        "type": "float",
                        "example": "50.00"
                    },
                    "status": {
                        "description": "1=pending,2=withdrawn,3=deleted",
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3
                        ],
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserWithdrawal"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Use a global your user email / password combo to obtain a bearer token",
                "in": "header",
                "scheme": "bearer"
            }
        }
    }
}
